{"version":3,"file":"static/js/947.1e5d1a2a.chunk.js","mappings":"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","sources":["components/BlogDetail.tsx","components/Modal.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Card, Form } from 'react-bootstrap';\nimport { addComment, editComment, deleteComment } from '../store/reducers/blogSlice'; // ⬅️ Import actions\nimport { AppDispatch, RootState } from '../store';\nimport ShareModal from '../components/Modal';\nimport \"../style/BlogDetail.css\";\n\nconst BlogDetail: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  const blog = useSelector((state: RootState) =>\n    state.blog.blogs.find((b) => b.id === Number(id))\n  );\n  const dispatch = useDispatch<AppDispatch>();\n\n  const [newComment, setNewComment] = useState('');\n  const [showModal, setShowModal] = useState(false);\n\n  const [editingIndex, setEditingIndex] = useState<number | null>(null);\n  const [editedComment, setEditedComment] = useState('');\n\n  const handleAddComment = useCallback(() => {\n    if (!blog) return;\n    const trimmedComment = newComment.trim();\n    if (trimmedComment) {\n      dispatch(addComment({ id: blog.id, comment: trimmedComment }));\n      setNewComment('');\n    }\n  }, [dispatch, blog, newComment]);\n\n  const handleEdit = (index: number, comment: string) => {\n    setEditingIndex(index);\n    setEditedComment(comment);\n  };\n\n  const handleUpdateComment = () => {\n    if (blog && editedComment.trim() && editingIndex !== null) {\n      dispatch(editComment({ id: blog.id, index: editingIndex, updatedComment: editedComment }));\n      setEditingIndex(null);\n      setEditedComment('');\n    }\n  };\n\n  const handleDeleteComment = (index: number) => {\n    if (blog) {\n      dispatch(deleteComment({ id: blog.id, index }));\n    }\n  };\n\n  const handleShare = useCallback(() => {\n    navigator.clipboard.writeText(window.location.href)\n      .then(() => setShowModal(true))\n      .catch(() => alert('Failed to copy URL.'));\n  }, []);\n\n  const handleCloseModal = useCallback(() => setShowModal(false), []);\n\n  if (!blog) {\n    return <p className=\"text-center my-5\">Blog not found</p>;\n  }\n\n  return (\n    <>\n      <Card className=\"my-4 shadow-sm\">\n        <div className=\"d-flex justify-content-center align-items-center p-3\">\n          <Card.Img\n            variant=\"top\"\n            src={blog.imageUrl}\n            alt={blog.title}\n            className=\"image-container\"\n          />\n        </div>\n        <Card.Body>\n          <Card.Title className=\"h4\">{blog.title}</Card.Title>\n          <Card.Text>{blog.body}</Card.Text>\n\n          <Button variant=\"success\" onClick={handleShare}>Share</Button>\n\n          <hr className=\"my-4\" />\n\n          <h5>Comments</h5>\n          <div className=\"mb-3\">\n            {blog.comments.length > 0 ? (\n              blog.comments.map((comment, idx) => (\n                <div key={idx} className=\"border rounded p-2 my-2 bg-light position-relative\">\n                  {editingIndex === idx ? (\n                    <>\n                      <Form.Control\n                        type=\"text\"\n                        value={editedComment}\n                        onChange={(e) => setEditedComment(e.target.value)}\n                        onKeyDown={(e) => {\n                          if (e.key === 'Enter') {\n                            e.preventDefault();\n                            handleUpdateComment();\n                          }\n                        }}\n                      />\n                      <div className=\"mt-2 d-flex gap-2\">\n                        <Button variant=\"success\" size=\"sm\" onClick={handleUpdateComment}>Save</Button>\n                        <Button variant=\"secondary\" size=\"sm\" onClick={() => setEditingIndex(null)}>Cancel</Button>\n                      </div>\n                    </>\n                  ) : (\n                    <>\n                      <p className=\"mb-1\">{comment}</p>\n                      <div className=\"position-absolute top-0 end-0 m-2 d-flex gap-1\">\n                        <Button variant=\"outline-primary\" size=\"sm\" onClick={() => handleEdit(idx, comment)}>Edit</Button>\n                        <Button variant=\"outline-danger\" size=\"sm\" onClick={() => handleDeleteComment(idx)}>Delete</Button>\n                      </div>\n                    </>\n                  )}\n                </div>\n              ))\n            ) : (\n              <p className=\"text-muted\">No comments yet.</p>\n            )}\n          </div>\n\n          <Form className=\"d-flex gap-2\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Add a comment...\"\n              value={newComment}\n              onChange={(e) => setNewComment(e.target.value)}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  e.preventDefault();\n                  handleAddComment();\n                }\n              }}\n            />\n            <Button variant=\"primary\" onClick={handleAddComment}>\n              Post\n            </Button>\n          </Form>\n        </Card.Body>\n      </Card>\n\n      <ShareModal show={showModal} onClose={handleCloseModal} url={window.location.href} />\n    </>\n  );\n};\n\nexport default BlogDetail;\n","// components/ShareModal.tsx\nimport React from 'react';\nimport { Modal, Button, InputGroup, FormControl } from 'react-bootstrap';\n\ninterface ShareModalProps {\n  show: boolean;\n  onClose: () => void;\n  url: string;\n}\n\nconst ShareModal: React.FC<ShareModalProps> = ({ show, onClose, url }) => {\n  const handleCopy = () => {\n    navigator.clipboard.writeText(url)\n      .then(() => {\n        alert(\"Blog URL copied to clipboard!\");\n        onClose();\n      })\n      .catch(() => alert(\"Failed to copy URL.\"));\n  };\n\n  return (\n    <Modal show={show} onHide={onClose} centered>\n      <Modal.Header closeButton>\n        <Modal.Title>Share this Blog</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <InputGroup className=\"mb-3\">\n          <FormControl value={url} readOnly />\n          <Button variant=\"primary\" onClick={handleCopy}>Copy Link</Button>\n        </InputGroup>\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default ShareModal;\n"],"names":["BlogDetail","id","useParams","blog","useSelector","state","blogs","find","b","Number","dispatch","useDispatch","newComment","setNewComment","useState","showModal","setShowModal","editingIndex","setEditingIndex","editedComment","setEditedComment","handleAddComment","useCallback","trimmedComment","trim","addComment","comment","handleUpdateComment","editComment","index","updatedComment","handleShare","navigator","clipboard","writeText","window","location","href","then","catch","alert","handleCloseModal","_jsxs","_Fragment","children","Card","className","_jsx","Img","variant","src","imageUrl","alt","title","Body","Title","Text","body","Button","onClick","comments","length","map","idx","Form","Control","type","value","onChange","e","target","onKeyDown","key","preventDefault","size","handleEdit","handleDeleteComment","deleteComment","placeholder","ShareModal","show","onClose","url","_ref","Modal","onHide","centered","Header","closeButton","InputGroup","FormControl","readOnly","handleCopy"],"sourceRoot":""}